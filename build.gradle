buildscript {
    repositories {
        jcenter()
        maven { url = "http://files.minecraftforge.net/maven" }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    }
}
apply plugin: 'net.minecraftforge.gradle.forge'
//Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.

def llibrary_version = getVersion("LLIBRARY_VERSION")
version = "0.1"
group = "gosyn" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "gosyn"

sourceCompatibility = targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.
compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
}

minecraft {
    version = "1.12.2-14.23.5.2768"
    runDir = "run"
    
    // the mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   snapshot are built nightly.
    // stable_#            stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not always work.
    // simply re-run your setup task after changing the mappings to update your workspace.
    mappings = "snapshot_20171003"
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
}

repositories {
    mavenCentral()
    maven {
    name = "mcmoddev"
    url = "http://maven.mcmoddev.com/"
    }
}

dependencies {
    deobfCompile "net.ilexiconn:llibrary:1.7.9-1.12.2"
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version
    inputs.property "llibrary_version", llibrary_version

    from (sourceSets.main.resources.srcDirs) {
        include "mcmod.info"
        expand "version": project.version, "mcversion": project.minecraft.version, "llibrary_version": llibrary_version
    }

       
    // copy everything else except the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

String getVersion(String type) {
    String major = "0";
    String revision = "0";
    String patch = "0";
    String prefix = "public static final String $type = \"";
    File file = file("src/main/java/gosynmod/common/Gosyn.java")
    file.eachLine { String s ->
        s = s.trim();
        if (s.startsWith(prefix)) {
            s = s.substring(prefix.length(), s.length() - 2);
            String[] pts = s.split("\\.");

            major = pts[0];
            revision = pts[1];
            patch = pts[2];
        }
    }

    return "$major.$revision.$patch";
}